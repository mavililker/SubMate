{
    "name": "Submate",
    "structs": {},
    "methods": [
        {
            "name": "hello",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "create_group",
            "args": [
                {
                    "type": "string",
                    "name": "group_name"
                },
                {
                    "type": "string",
                    "name": "subscription"
                },
                {
                    "type": "uint64",
                    "name": "per_user_fee"
                },
                {
                    "type": "uint64",
                    "name": "max_members"
                },
                {
                    "type": "string",
                    "name": "creator"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 6
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "groups": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "Z3JvdXBz"
                },
                "group_name": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "Z3JvdXBfbmFtZQ=="
                },
                "subscription": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "c3Vic2NyaXB0aW9u"
                },
                "creator": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "Y3JlYXRvcg=="
                },
                "members": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "bWVtYmVycw=="
                },
                "pending_members": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "cGVuZGluZ19tZW1iZXJz"
                },
                "per_user_fee": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cGVyX3VzZXJfZmVl"
                },
                "max_members": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bWF4X21lbWJlcnM="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        54,
                        92
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        132
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        57,
                        95
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        179,
                        301
                    ],
                    "errorMessage": "check self.groups exists"
                },
                {
                    "pc": [
                        158
                    ],
                    "errorMessage": "group_name must not be empty"
                },
                {
                    "pc": [
                        169
                    ],
                    "errorMessage": "max_members must be greater than 0"
                },
                {
                    "pc": [
                        175
                    ],
                    "errorMessage": "max_members must be less than or equal to 100"
                },
                {
                    "pc": [
                        166
                    ],
                    "errorMessage": "per_user_fee must be greater than 0"
                },
                {
                    "pc": [
                        163
                    ],
                    "errorMessage": "subscription must not be empty"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBzbWFydF9jb250cmFjdHMuc3VibWF0ZS5jb250cmFjdC5TdWJtYXRlLl9fYWxnb3B5X2VudHJ5cG9pbnRfd2l0aF9pbml0KCkgLT4gdWludDY0OgptYWluOgogICAgaW50Y2Jsb2NrIDAgMQogICAgYnl0ZWNibG9jayAiZ3JvdXBzIiAiIgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMgogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MTAKICAgIC8vIHNlbGYuZ3JvdXBzOiBTdHJpbmcgPSBTdHJpbmcoIiIpCiAgICBieXRlY18wIC8vICJncm91cHMiCiAgICBieXRlY18xIC8vICIiCiAgICBhcHBfZ2xvYmFsX3B1dAoKbWFpbl9hZnRlcl9pZl9lbHNlQDI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weTo2CiAgICAvLyBjbGFzcyBTdWJtYXRlKEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANwogICAgcHVzaGJ5dGVzcyAweDAyYmVjZTExIDB4ZTRhNTUxNTAgLy8gbWV0aG9kICJoZWxsbyhzdHJpbmcpc3RyaW5nIiwgbWV0aG9kICJjcmVhdGVfZ3JvdXAoc3RyaW5nLHN0cmluZyx1aW50NjQsdWludDY0LHN0cmluZyl2b2lkIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9oZWxsb19yb3V0ZUA1IG1haW5fY3JlYXRlX2dyb3VwX3JvdXRlQDYKCm1haW5fYWZ0ZXJfaWZfZWxzZUA5OgogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6NgogICAgLy8gY2xhc3MgU3VibWF0ZShBUkM0Q29udHJhY3QpOgogICAgaW50Y18wIC8vIDAKICAgIHJldHVybgoKbWFpbl9jcmVhdGVfZ3JvdXBfcm91dGVANjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjE2CiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6NgogICAgLy8gY2xhc3MgU3VibWF0ZShBUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZXh0cmFjdCAyIDAKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGV4dHJhY3QgMiAwCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAzCiAgICBidG9pCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA0CiAgICBidG9pCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyA1CiAgICBleHRyYWN0IDIgMAogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MTYKICAgIC8vIEBhYmltZXRob2QoKQogICAgY2FsbHN1YiBjcmVhdGVfZ3JvdXAKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5faGVsbG9fcm91dGVANToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjEyCiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6NgogICAgLy8gY2xhc3MgU3VibWF0ZShBUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZXh0cmFjdCAyIDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjEyCiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgaGVsbG8KICAgIGR1cAogICAgbGVuCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgc3dhcAogICAgY29uY2F0CiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDc6CiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weTo2CiAgICAvLyBjbGFzcyBTdWJtYXRlKEFSQzRDb250cmFjdCk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDkKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgoKLy8gc21hcnRfY29udHJhY3RzLnN1Ym1hdGUuY29udHJhY3QuU3VibWF0ZS5oZWxsbyhuYW1lOiBieXRlcykgLT4gYnl0ZXM6CmhlbGxvOgogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MTItMTMKICAgIC8vIEBhYmltZXRob2QoKQogICAgLy8gZGVmIGhlbGxvKHNlbGYsIG5hbWU6IFN0cmluZykgLT4gU3RyaW5nOgogICAgcHJvdG8gMSAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weToxNAogICAgLy8gcmV0dXJuICJIZWxsbywgIiArIG5hbWUKICAgIHB1c2hieXRlcyAiSGVsbG8sICIKICAgIGZyYW1lX2RpZyAtMQogICAgY29uY2F0CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuc3VibWF0ZS5jb250cmFjdC5TdWJtYXRlLmNyZWF0ZV9ncm91cChncm91cF9uYW1lOiBieXRlcywgc3Vic2NyaXB0aW9uOiBieXRlcywgcGVyX3VzZXJfZmVlOiB1aW50NjQsIG1heF9tZW1iZXJzOiB1aW50NjQsIGNyZWF0b3I6IGJ5dGVzKSAtPiB2b2lkOgpjcmVhdGVfZ3JvdXA6CiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weToxNi0yNAogICAgLy8gQGFiaW1ldGhvZCgpCiAgICAvLyBkZWYgY3JlYXRlX2dyb3VwKAogICAgLy8gICAgIHNlbGYsCiAgICAvLyAgICAgZ3JvdXBfbmFtZTogU3RyaW5nLAogICAgLy8gICAgIHN1YnNjcmlwdGlvbjogU3RyaW5nLAogICAgLy8gICAgIHBlcl91c2VyX2ZlZTogVUludDY0LAogICAgLy8gICAgIG1heF9tZW1iZXJzOiBVSW50NjQsCiAgICAvLyAgICAgY3JlYXRvcjogU3RyaW5nLAogICAgLy8gKSAtPiBOb25lOgogICAgcHJvdG8gNSAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weToyNQogICAgLy8gYXNzZXJ0IGdyb3VwX25hbWUgIT0gIiIsICJncm91cF9uYW1lIG11c3Qgbm90IGJlIGVtcHR5IgogICAgZnJhbWVfZGlnIC01CiAgICBieXRlY18xIC8vICIiCiAgICAhPQogICAgYXNzZXJ0IC8vIGdyb3VwX25hbWUgbXVzdCBub3QgYmUgZW1wdHkKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjI2CiAgICAvLyBhc3NlcnQgc3Vic2NyaXB0aW9uICE9ICIiLCAic3Vic2NyaXB0aW9uIG11c3Qgbm90IGJlIGVtcHR5IgogICAgZnJhbWVfZGlnIC00CiAgICBieXRlY18xIC8vICIiCiAgICAhPQogICAgYXNzZXJ0IC8vIHN1YnNjcmlwdGlvbiBtdXN0IG5vdCBiZSBlbXB0eQogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MjcKICAgIC8vIGFzc2VydCBwZXJfdXNlcl9mZWUgPiAwLCAicGVyX3VzZXJfZmVlIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAiCiAgICBmcmFtZV9kaWcgLTMKICAgIGFzc2VydCAvLyBwZXJfdXNlcl9mZWUgbXVzdCBiZSBncmVhdGVyIHRoYW4gMAogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MjgKICAgIC8vIGFzc2VydCBtYXhfbWVtYmVycyA+IDAsICJtYXhfbWVtYmVycyBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwIgogICAgZnJhbWVfZGlnIC0yCiAgICBhc3NlcnQgLy8gbWF4X21lbWJlcnMgbXVzdCBiZSBncmVhdGVyIHRoYW4gMAogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MjkKICAgIC8vIGFzc2VydCBtYXhfbWVtYmVycyA8PSA0LCAibWF4X21lbWJlcnMgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gMTAwIgogICAgZnJhbWVfZGlnIC0yCiAgICBwdXNoaW50IDQgLy8gNAogICAgPD0KICAgIGFzc2VydCAvLyBtYXhfbWVtYmVycyBtdXN0IGJlIGxlc3MgdGhhbiBvciBlcXVhbCB0byAxMDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBpZiBzZWxmLmdyb3VwcyA9PSAiIjoKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJncm91cHMiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuZ3JvdXBzIGV4aXN0cwogICAgYnl0ZWNfMSAvLyAiIgogICAgPT0KICAgIGJ6IGNyZWF0ZV9ncm91cF9lbHNlX2JvZHlAMgogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MzIKICAgIC8vIHNlbGYuZ3JvdXBzID0gZ3JvdXBfbmFtZQogICAgYnl0ZWNfMCAvLyAiZ3JvdXBzIgogICAgZnJhbWVfZGlnIC01CiAgICBhcHBfZ2xvYmFsX3B1dAoKY3JlYXRlX2dyb3VwX2FmdGVyX2lmX2Vsc2VAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjM2CiAgICAvLyBzZWxmLmdyb3VwX25hbWUgPSBncm91cF9uYW1lCiAgICBwdXNoYnl0ZXMgImdyb3VwX25hbWUiCiAgICBmcmFtZV9kaWcgLTUKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weTozNwogICAgLy8gc2VsZi5zdWJzY3JpcHRpb24gPSBzdWJzY3JpcHRpb24KICAgIHB1c2hieXRlcyAic3Vic2NyaXB0aW9uIgogICAgZnJhbWVfZGlnIC00CiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MzgKICAgIC8vIHNlbGYuY3JlYXRvciA9IGNyZWF0b3IKICAgIHB1c2hieXRlcyAiY3JlYXRvciIKICAgIGZyYW1lX2RpZyAtMQogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9zdWJtYXRlL2NvbnRyYWN0LnB5OjM5CiAgICAvLyBzZWxmLm1lbWJlcnMgPSBjcmVhdG9yCiAgICBwdXNoYnl0ZXMgIm1lbWJlcnMiCiAgICBmcmFtZV9kaWcgLTEKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weTo0MAogICAgLy8gc2VsZi5wZW5kaW5nX21lbWJlcnMgPSBTdHJpbmcoIiIpCiAgICBwdXNoYnl0ZXMgInBlbmRpbmdfbWVtYmVycyIKICAgIGJ5dGVjXzEgLy8gIiIKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvc3VibWF0ZS9jb250cmFjdC5weTo0MQogICAgLy8gc2VsZi5wZXJfdXNlcl9mZWUgPSBwZXJfdXNlcl9mZWUKICAgIHB1c2hieXRlcyAicGVyX3VzZXJfZmVlIgogICAgZnJhbWVfZGlnIC0zCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6NDIKICAgIC8vIHNlbGYubWF4X21lbWJlcnMgPSBtYXhfbWVtYmVycwogICAgcHVzaGJ5dGVzICJtYXhfbWVtYmVycyIKICAgIGZyYW1lX2RpZyAtMgogICAgYXBwX2dsb2JhbF9wdXQKICAgIHJldHN1YgoKY3JlYXRlX2dyb3VwX2Vsc2VfYm9keUAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL3N1Ym1hdGUvY29udHJhY3QucHk6MzQKICAgIC8vIHNlbGYuZ3JvdXBzID0gc2VsZi5ncm91cHMgKyAiLCIgKyBncm91cF9uYW1lCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMCAvLyAiZ3JvdXBzIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBzZWxmLmdyb3VwcyBleGlzdHMKICAgIHB1c2hieXRlcyAiLCIKICAgIGNvbmNhdAogICAgZnJhbWVfZGlnIC01CiAgICBjb25jYXQKICAgIGJ5dGVjXzAgLy8gImdyb3VwcyIKICAgIHN3YXAKICAgIGFwcF9nbG9iYWxfcHV0CiAgICBiIGNyZWF0ZV9ncm91cF9hZnRlcl9pZl9lbHNlQDMK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmAgZncm91cHMAMRhAAAMoKWcxG0EAYIICBAK+zhEE5KVRUDYaAI4CACgAAiJDMRkURDEYRDYaAVcCADYaAlcCADYaAxc2GgQXNhoFVwIAiABAI0MxGRREMRhENhoBVwIAiAAeSRUWVwYCTFCABBUffHVMULAjQzEZQP+wMRgURCNDigEBgAdIZWxsbywgi/9QiYoFAIv7KRNEi/wpE0SL/USL/kSL/oEEDkQiKGVEKRJBAHEoi/tngApncm91cF9uYW1li/tngAxzdWJzY3JpcHRpb26L/GeAB2NyZWF0b3KL/2eAB21lbWJlcnOL/2eAD3BlbmRpbmdfbWVtYmVycylngAxwZXJfdXNlcl9mZWWL/WeAC21heF9tZW1iZXJzi/5niSIoZUSAASxQi/tQKExnQv+C",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}