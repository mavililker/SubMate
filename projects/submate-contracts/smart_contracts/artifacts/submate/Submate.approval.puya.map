{
  "version": 3,
  "sources": [
    "../../submate/contract.py"
  ],
  "mappings": ";AAKA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AAMK;;AAAA;AAAA;AAAA;;AAAA;AANL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAMK;;;AAAA;;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAFL;;;AAAA;;;AAEK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;AAFL;;AAAA;;;;;;;;;;AAEA;;;AAEe;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AASe;;AAAc;;AAAd;AAAP;AACO;;AAAgB;;AAAhB;AAAP;AACA;;AAAA;AACA;;AAAA;AACO;;AAAe;;AAAf;AAAP;AAGA;;;;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;AAAA;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "6": {
      "op": "pushbytess 0x02bece11 0xe4a55150 // method \"hello(string)string\", method \"create_group(string,string,uint64,uint64,string)void\"",
      "defined_out": [
        "Method(create_group(string,string,uint64,uint64,string)void)",
        "Method(hello(string)string)"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(create_group(string,string,uint64,uint64,string)void)"
      ]
    },
    "18": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_group(string,string,uint64,uint64,string)void)",
        "Method(hello(string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(hello(string)string)",
        "Method(create_group(string,string,uint64,uint64,string)void)",
        "tmp%2#0"
      ]
    },
    "21": {
      "op": "match main_hello_route@3 main_create_group_route@4",
      "stack_out": []
    },
    "27": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "29": {
      "op": "return",
      "stack_out": []
    },
    "30": {
      "block": "main_create_group_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "32": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "33": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "34": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "36": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "37": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "40": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "46": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "49": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "52": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "53": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "56": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "57": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "60": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "63": {
      "callsub": "smart_contracts.submate.contract.Submate.create_group",
      "op": "callsub create_group",
      "stack_out": []
    },
    "66": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "68": {
      "op": "return",
      "stack_out": []
    },
    "69": {
      "block": "main_hello_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "71": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "72": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "73": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "75": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "76": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "79": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "82": {
      "callsub": "smart_contracts.submate.contract.Submate.hello",
      "op": "callsub hello",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "85": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "86": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "87": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "88": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "91": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "92": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "93": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "99": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "100": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "101": {
      "op": "log",
      "stack_out": []
    },
    "102": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "104": {
      "op": "return",
      "stack_out": []
    },
    "105": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "107": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "110": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "112": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "113": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "114": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "116": {
      "op": "return",
      "stack_out": []
    },
    "117": {
      "subroutine": "smart_contracts.submate.contract.Submate.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "120": {
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "129": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "131": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "132": {
      "retsub": true,
      "op": "retsub"
    },
    "133": {
      "subroutine": "smart_contracts.submate.contract.Submate.create_group",
      "params": {
        "group_name#0": "bytes",
        "subscription#0": "bytes",
        "per_user_fee#0": "uint64",
        "max_members#0": "uint64",
        "creator#0": "bytes"
      },
      "block": "create_group",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "136": {
      "op": "frame_dig -5",
      "defined_out": [
        "group_name#0 (copy)"
      ],
      "stack_out": [
        "group_name#0 (copy)"
      ]
    },
    "138": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "group_name#0 (copy)"
      ],
      "stack_out": [
        "group_name#0 (copy)",
        "\"\""
      ]
    },
    "140": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "141": {
      "error": "group_name must not be empty",
      "op": "assert // group_name must not be empty",
      "stack_out": []
    },
    "142": {
      "op": "frame_dig -4",
      "defined_out": [
        "subscription#0 (copy)"
      ],
      "stack_out": [
        "subscription#0 (copy)"
      ]
    },
    "144": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "subscription#0 (copy)",
        "\"\""
      ]
    },
    "146": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "147": {
      "error": "subscription must not be empty",
      "op": "assert // subscription must not be empty",
      "stack_out": []
    },
    "148": {
      "op": "frame_dig -3",
      "defined_out": [
        "per_user_fee#0 (copy)"
      ],
      "stack_out": [
        "per_user_fee#0 (copy)"
      ]
    },
    "150": {
      "error": "per_user_fee must be greater than 0",
      "op": "assert // per_user_fee must be greater than 0",
      "stack_out": []
    },
    "151": {
      "op": "frame_dig -2",
      "defined_out": [
        "max_members#0 (copy)"
      ],
      "stack_out": [
        "max_members#0 (copy)"
      ]
    },
    "153": {
      "error": "max_members must be greater than 0",
      "op": "assert // max_members must be greater than 0",
      "stack_out": []
    },
    "154": {
      "op": "frame_dig -2",
      "stack_out": [
        "max_members#0 (copy)"
      ]
    },
    "156": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "max_members#0 (copy)"
      ],
      "stack_out": [
        "max_members#0 (copy)",
        "4"
      ]
    },
    "158": {
      "op": "<=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "159": {
      "error": "max_members must be less than or equal to 100",
      "op": "assert // max_members must be less than or equal to 100",
      "stack_out": []
    },
    "160": {
      "op": "pushbytes \"group_name\"",
      "defined_out": [
        "\"group_name\""
      ],
      "stack_out": [
        "\"group_name\""
      ]
    },
    "172": {
      "op": "frame_dig -5",
      "stack_out": [
        "\"group_name\"",
        "group_name#0 (copy)"
      ]
    },
    "174": {
      "op": "app_global_put",
      "stack_out": []
    },
    "175": {
      "op": "pushbytes \"subscription\"",
      "defined_out": [
        "\"subscription\""
      ],
      "stack_out": [
        "\"subscription\""
      ]
    },
    "189": {
      "op": "frame_dig -4",
      "stack_out": [
        "\"subscription\"",
        "subscription#0 (copy)"
      ]
    },
    "191": {
      "op": "app_global_put",
      "stack_out": []
    },
    "192": {
      "op": "pushbytes \"creator\"",
      "defined_out": [
        "\"creator\""
      ],
      "stack_out": [
        "\"creator\""
      ]
    },
    "201": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"creator\"",
        "creator#0 (copy)"
      ],
      "stack_out": [
        "\"creator\"",
        "creator#0 (copy)"
      ]
    },
    "203": {
      "op": "app_global_put",
      "stack_out": []
    },
    "204": {
      "op": "pushbytes \"members\"",
      "defined_out": [
        "\"members\""
      ],
      "stack_out": [
        "\"members\""
      ]
    },
    "213": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"members\"",
        "creator#0 (copy)"
      ]
    },
    "215": {
      "op": "app_global_put",
      "stack_out": []
    },
    "216": {
      "op": "pushbytess \"pending_members\" \"\" // \"pending_members\", \"\"",
      "defined_out": [
        "\"\"",
        "\"pending_members\""
      ],
      "stack_out": [
        "\"pending_members\"",
        "\"\""
      ]
    },
    "235": {
      "op": "app_global_put",
      "stack_out": []
    },
    "236": {
      "op": "pushbytes \"per_user_fee\"",
      "defined_out": [
        "\"per_user_fee\""
      ],
      "stack_out": [
        "\"per_user_fee\""
      ]
    },
    "250": {
      "op": "frame_dig -3",
      "stack_out": [
        "\"per_user_fee\"",
        "per_user_fee#0 (copy)"
      ]
    },
    "252": {
      "op": "app_global_put",
      "stack_out": []
    },
    "253": {
      "op": "pushbytes \"max_members\"",
      "defined_out": [
        "\"max_members\""
      ],
      "stack_out": [
        "\"max_members\""
      ]
    },
    "266": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"max_members\"",
        "max_members#0 (copy)"
      ]
    },
    "268": {
      "op": "app_global_put",
      "stack_out": []
    },
    "269": {
      "retsub": true,
      "op": "retsub"
    }
  }
}